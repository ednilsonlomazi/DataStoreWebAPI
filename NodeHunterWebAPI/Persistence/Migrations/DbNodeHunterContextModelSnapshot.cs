// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodeHunterWebAPI.Persistence;

#nullable disable

namespace NodeHunterWebAPI.Persistence.Migrations
{
    [DbContext(typeof(DbNodeHunterContext))]
    partial class DbNodeHunterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabCliente", b =>
                {
                    b.Property<int>("codigoCliente")
                        .HasColumnType("int");

                    b.HasKey("codigoCliente");

                    b.ToTable("tabCliente");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabDocumento", b =>
                {
                    b.Property<int>("codigoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigoDocumento"));

                    b.Property<int>("codigoCliente")
                        .HasColumnType("int");

                    b.Property<int>("codigoEmissor")
                        .HasColumnType("int");

                    b.Property<int>("codigoItemDocumento")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataSolicitacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("isOpen")
                        .HasColumnType("bit");

                    b.HasKey("codigoDocumento");

                    b.ToTable("tabDocumento");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabEmissor", b =>
                {
                    b.Property<int>("codigoEmissor")
                        .HasColumnType("int");

                    b.HasKey("codigoEmissor");

                    b.ToTable("tabEmissors");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabItemDocumento", b =>
                {
                    b.Property<int>("codigoItemDocumento")
                        .HasColumnType("int");

                    b.Property<int>("codigoDocumento")
                        .HasColumnType("int");

                    b.Property<int>("tabObjetocodigoObjeto")
                        .HasColumnType("int");

                    b.Property<int>("tabPermissaocodigoPermissao")
                        .HasColumnType("int");

                    b.HasKey("codigoItemDocumento");

                    b.HasIndex("tabObjetocodigoObjeto");

                    b.HasIndex("tabPermissaocodigoPermissao");

                    b.ToTable("tabItemDocumento");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabObjeto", b =>
                {
                    b.Property<int>("codigoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigoObjeto"));

                    b.Property<int>("codigoBancoDados")
                        .HasColumnType("int");

                    b.Property<int>("codigoSchema")
                        .HasColumnType("int");

                    b.Property<string>("descricaoTipoObjeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigoObjeto");

                    b.ToTable("tabObjeto");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabPermissao", b =>
                {
                    b.Property<int>("codigoPermissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigoPermissao"));

                    b.Property<string>("descricaoPermissao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigoPermissao");

                    b.ToTable("tabPermissao");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabUsuario", b =>
                {
                    b.Property<int>("codigoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigoUsuario"));

                    b.Property<bool>("isEmissor")
                        .HasColumnType("bit");

                    b.Property<string>("loginName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigoUsuario");

                    b.ToTable("tabUsuario");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabCliente", b =>
                {
                    b.HasOne("NodeHunterWebAPI.Entities.TabUsuario", "tabUsuario")
                        .WithOne("tabCliente")
                        .HasForeignKey("NodeHunterWebAPI.Entities.TabCliente", "codigoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tabUsuario");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabEmissor", b =>
                {
                    b.HasOne("NodeHunterWebAPI.Entities.TabUsuario", "tabUsuario")
                        .WithOne("tabEmissor")
                        .HasForeignKey("NodeHunterWebAPI.Entities.TabEmissor", "codigoEmissor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tabUsuario");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabItemDocumento", b =>
                {
                    b.HasOne("NodeHunterWebAPI.Entities.TabDocumento", "tabDocumento")
                        .WithOne("tabItemDocumento")
                        .HasForeignKey("NodeHunterWebAPI.Entities.TabItemDocumento", "codigoItemDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NodeHunterWebAPI.Entities.TabObjeto", "tabObjeto")
                        .WithMany()
                        .HasForeignKey("tabObjetocodigoObjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NodeHunterWebAPI.Entities.TabPermissao", "tabPermissao")
                        .WithMany()
                        .HasForeignKey("tabPermissaocodigoPermissao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tabDocumento");

                    b.Navigation("tabObjeto");

                    b.Navigation("tabPermissao");
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabDocumento", b =>
                {
                    b.Navigation("tabItemDocumento")
                        .IsRequired();
                });

            modelBuilder.Entity("NodeHunterWebAPI.Entities.TabUsuario", b =>
                {
                    b.Navigation("tabCliente");

                    b.Navigation("tabEmissor");
                });
#pragma warning restore 612, 618
        }
    }
}
